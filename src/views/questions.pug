doctype html
html(lang='en')
  head
    style.
      body {
        margin: 0;
        padding: 20px;
      }
      .question-list {
        max-width: 800px;
        margin: 0 auto;
      }
      .question-item {
        background: #f5f5f5;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 20px;
      }
      .question-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
      }
      .question-title {
        font-size: 1.2em;
        font-weight: bold;
        color: #464775;
      }
      .question-meta {
        font-size: 0.9em;
        color: #666;
      }
      .answers-section {
        margin-top: 15px;
        padding-top: 15px;
        border-top: 1px solid #ddd;
      }
      .answer-item {
        background: white;
        border-radius: 4px;
        padding: 15px;
        margin-bottom: 10px;
      }
      .answer-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
      }
      .answer-meta {
        font-size: 0.9em;
        color: #666;
      }
      .answer-actions {
        display: flex;
        gap: 10px;
      }
      .button {
        padding: 8px 16px;
        border-radius: 4px;
        border: none;
        cursor: pointer;
        font-size: 0.9em;
      }
      .button-primary {
        background-color: #464775;
        color: white;
      }
      .button-secondary {
        background-color: #e0e0e0;
        color: #333;
      }
      .accepted {
        border-left: 4px solid #4CAF50;
      }
      .new-answer-form {
        margin-top: 15px;
      }
      .new-answer-input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 10px;
        min-height: 60px;
      }
    title Questions and Answers
    link(rel='stylesheet', type='text/css', href='/styles/msteams-16.css')
    link(rel='stylesheet', type='text/css', href='/styles/custom.css')
    script(src="https://unpkg.com/@microsoft/teams-js@1.3.7/dist/MicrosoftTeams.min.js" integrity="sha384-glExfvkpce98dO2oN+diZ/Luv/5qrZJiOvWCeR8ng/ZxlhpvBgHKeVFRURrh+NEC" crossorigin="anonymous")
  body(class='theme-light')
    script.
      microsoftTeams.initialize();
      
      function submitAnswer(questionId) {
        const answerText = document.getElementById(`answer-${questionId}`).value;
        if (!answerText.trim()) return;

        const answer = {
          text: answerText,
          userId: '#{userId}',
          userName: '#{userName}',
          timestamp: new Date().toISOString(),
          isAccepted: false
        };

        fetch(`/api/questions/${questionId}/answers`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(answer)
        })
        .then(response => response.json())
        .then(() => {
          window.location.reload();
        })
        .catch(error => {
          console.error('Error submitting answer:', error);
        });
      }

      function updateAnswerStatus(questionId, answerId, isAccepted) {
        fetch(`/api/questions/${questionId}/answers/${answerId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ isAccepted })
        })
        .then(response => response.json())
        .then(() => {
          window.location.reload();
        })
        .catch(error => {
          console.error('Error updating answer status:', error);
        });
      }

    div(class='question-list')
      each question in questions
        div(class='question-item')
          div(class='question-header')
            div(class='question-title')= question.text
            div(class='question-meta')
              | Asked by #{question.userName}
              br
              | #{new Date(question.timestamp).toLocaleString()}
          
          div(class='answers-section')
            h3 Answers
            each answer in question.answers
              div(class=`answer-item ${answer.isAccepted ? 'accepted' : ''}`)
                div(class='answer-header')
                  div(class='answer-meta')
                    | #{answer.userName} answered #{new Date(answer.timestamp).toLocaleString()}
                  if question.userId === userId && !answer.isAccepted
                    div(class='answer-actions')
                      button(
                        class='button button-primary'
                        onclick=`updateAnswerStatus('${question.id}', '${answer.id}', true)`
                      ) Accept Answer
                div(class='answer-text')= answer.text

            div(class='new-answer-form')
              textarea(
                id=`answer-${question.id}`
                class='new-answer-input'
                placeholder='Write your answer...'
              )
              button(
                class='button button-primary'
                onclick=`submitAnswer('${question.id}')`
              ) Submit Answer 